(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{1036:function(e,n,t){"use strict";var l,o=this&&this.__extends||(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])},function(e,n){function t(){this.constructor=e}l(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var a=t(1),r=t(530),i=t(534),m=t(533),c=t(46),d=t(2),s=t(127),u=t(72),b=t(47),p={basic:t(1037),image:t(1038),modalCard:t(1039)},C=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o(n,e),n.prototype.render=function(){return a.createElement("div",{className:m.default.bdContent},a.createElement("div",{className:m.default.content},a.createElement(i.default,{vertical:!0,codes:[p.basic]},a.createElement("p",null,"The ",a.createElement("strong",null,"<Modal />")," structure is very simple:"),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",null,"<Modal />"),": the main container",a.createElement("ul",null,a.createElement("li",null,a.createElement("code",null,"<ModalContent />"),": a horizontally and vertically centered container, with a maximum width of 640px, in which you can include ",a.createElement("em",null,"any")," content"),a.createElement("li",null,a.createElement("code",null,"<ModalClose />"),": a simple cross located in the top right corner of the relative parent container."))))),a.createElement(c.Content,null,a.createElement("p",null,"To ",a.createElement("strong",null,"activate")," the modal, just add the ",a.createElement("code",null,"is-active")," modifier on the ",a.createElement("code",null,".modal")," container")),a.createElement(s.default,{color:d.Color.danger},a.createElement(u.MessageHeader,null,a.createElement("p",null,"No JavaScript")),a.createElement(u.MessageBody,null,"Bambu give ",a.createElement("strong",null,"delegate")," methods to toggle ",a.createElement("strong",null,"<Modal />")," component . You will have to implement toggle yourself.")),a.createElement("hr",null),a.createElement(i.default,{vertical:!0,codes:[p.image]},a.createElement(b.Title,null,"Image modal"),a.createElement(c.Content,null,a.createElement("p",null,"Because a modal can contain ",a.createElement("strong",null,"anything you want"),", you can very simply use it to build an image gallery for example:"))),a.createElement("hr",null),a.createElement(i.default,{vertical:!0,codes:[p.modalCard]},a.createElement(b.Title,null,"Modal Card"),a.createElement(c.Content,null,a.createElement("p",null,"If you want a more classic modal, with a ",a.createElement("strong",null,"head"),", a ",a.createElement("strong",null,"body")," and a ",a.createElement("strong",null,"foot"),", use the ",a.createElement("code",null,"modal-card"),".")),a.createElement("p",null,"The ",a.createElement("strong",null,"<ModalCard />")," structure is very simple:"),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",null,"<ModalCard />"),": the main container",a.createElement("ul",null,a.createElement("li",null,a.createElement("code",null,"<ModalCardHeader />")),a.createElement("li",null,a.createElement("code",null,"<ModalCardTitle />")),a.createElement("li",null,a.createElement("code",null,"<ModalCardBody />")),a.createElement("li",null,a.createElement("code",null,"<ModalCardFooter />"))))))))},n}(r.Stateless);n.default=C},1037:function(e,n){e.exports='import * as React from "react";\nimport {Modal} from "bambu/lib/components/modal";\nimport {Media, MediaContent, MediaLeft} from "bambu/lib/components/media";\nimport {Image, ImageSize} from "bambu/lib/elements/image";\nimport {Content} from "bambu/lib/elements/content";\nimport ModalContent from "bambu/lib/components/modal/ModalContent";\nimport {Box} from "bambu/lib/elements/box";\nimport {observer} from "mobx-react";\nimport {observable} from "mobx";\nimport {Button} from "bambu/lib/elements/button";\nimport {Color, Size} from "bambu";\nimport ModalClose from "bambu/lib/components/modal/ModalClose";\n\nconst ModalContentView: React.SFC<{}> = () => (\n    <Media>\n        <MediaLeft>\n            <Image src="https://bulma.io/images/placeholders/128x128.png" alt="Image" bSize={ImageSize.is48X48}/>\n        </MediaLeft>\n        <MediaContent>\n            <Content>\n                <p>\n                    <strong>John Smith</strong>\n                    <small>@johnsmith</small>\n                    <small>31m</small>\n                    <br/>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur sit amet massa fringilla egestas. Nullam condimentum luctus turpis.\n                </p>\n            </Content>\n        </MediaContent>\n    </Media>\n);\n\n@observer\nexport default class Index extends React.Component <{}, {}> {\n    @observable\n    private isActive: boolean = false;\n\n    public render() {\n        return (\n            <div>\n                <Button bSize={Size.large} color={Color.primary} onClick={this.onClick}>Launch example modal</Button>\n                <Modal isActive={this.isActive} onBackgroundClick={this.onClick} close={\n                    <ModalClose bSize={Size.large} onClick={this.onClick}/>\n                }>\n                    <ModalContent>\n                        <Box>\n                            <ModalContentView/>\n                        </Box>\n                    </ModalContent>\n                </Modal>\n            </div>\n        );\n    }\n\n    public onClick = (e: any) => {\n        console.log("clicked");\n        this.isActive = !this.isActive;\n    }\n}\n'},1038:function(e,n){e.exports='import * as React from "react";\nimport {Modal} from "bambu/lib/components/modal";\nimport ModalContent from "bambu/lib/components/modal/ModalContent";\nimport {observer} from "mobx-react";\nimport {observable} from "mobx";\nimport {Button} from "bambu/lib/elements/button";\nimport {bulma, Color, Size} from "bambu";\nimport ModalClose from "bambu/lib/components/modal/ModalClose";\nimport {Image} from "bambu/lib/elements/image";\n\n@observer\nexport default class Index extends React.Component <{}, {}> {\n    @observable\n    private isActive: boolean = false;\n\n    public render() {\n        return (\n            <div>\n                <Button bSize={Size.large} color={Color.primary} onClick={this.onClick}>Launch example modal</Button>\n                <Modal isActive={this.isActive} onBackgroundClick={this.onClick} close={\n                    <ModalClose bSize={Size.large} onClick={this.onClick}/>\n                }>\n                    <ModalContent>\n                        <Image className={bulma.is4by3} src="https://bulma.io/images/placeholders/1280x960.png" alt="Image"/>\n                    </ModalContent>\n                </Modal>\n            </div>\n        );\n    }\n\n    public onClick = (e: any) => {\n        console.log("clicked");\n        this.isActive = !this.isActive;\n    }\n}\n'},1039:function(e,n){e.exports='import * as React from "react";\nimport {ModalCard, ModalCardBody, ModalCardFooter, ModalCardHeader, ModalCardTitle} from "bambu/lib/components/modal";\nimport {Delete} from "bambu/lib/elements/delete";\nimport {observer} from "mobx-react";\nimport {observable} from "mobx";\nimport {Color, Size} from "bambu";\nimport {Button} from "bambu/lib/elements/button";\n\n@observer\nexport default class Index extends React.Component <{}, {}> {\n    @observable\n    private isActive: boolean = false;\n\n    public render() {\n        return (\n            <div>\n                <Button bSize={Size.large} color={Color.primary} onClick={this.onClick}>Launch example modal</Button>\n                <ModalCard isActive={this.isActive}>\n                    <ModalCardHeader>\n                        <ModalCardTitle>Modal title</ModalCardTitle>\n                        <Delete onClick={this.onClick}/>\n                    </ModalCardHeader>\n                    <ModalCardBody>\n                        Modal Card Content\n                    </ModalCardBody>\n                    <ModalCardFooter>\n                        <Button color={Color.success}>Save Changes</Button>\n                        <Button onClick={this.onClick} color={Color.warning}>Cancel</Button>\n                    </ModalCardFooter>\n                </ModalCard>\n            </div>\n        );\n    }\n\n    public onClick = (e: any) => {\n        console.log("clicked");\n        this.isActive = !this.isActive;\n    }\n}\n'}}]);